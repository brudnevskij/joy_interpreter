//(a)
count (dup null (drop 0) (rest count 1 +) if) def
//(a) (a)
append(swap dup null (drop)(swap (uncons) dip append cons) if)def
//(a)
uncons (dup first swap rest) def
//(a), (a) count == 2
permBase (dup uncons uncons (swap) dip cons cons () cons cons) def
//(a)
one (dup null(swap drop)(rest null)if) def
//(a) int
appendToAll (dup null (swap drop)(uncons (swap dup(swap cons)dip)dip appendToAll cons)if) def
//(a) int
getByN (swap dup 0 == (drop first)(1 - swap rest getByN)if) def
//(a) int
delByN (swap dup 0 == (drop rest)(1 - swap uncons (swap)dip delByN cons)if)def
//(a) int
permut 
(dup( swap dup 1 -
	( 
	    1 - dup (
			swap dup (getByN)dip
		    )dip swap delByN dup count 2 == (permBase)(dup count swap permut)if  appendToAll
	)dip
     )dip swap dup 0 == (drop drop ())(swap permut)if append
) def
//(a)
genPerms (dup count swap permut) def

(1 2 3 4 5 6 7 8) genPerms


